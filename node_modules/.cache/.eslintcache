[{"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\index.js":"1","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\App.js":"2","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\serviceWorker.js":"3","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\storageUtils.js":"4","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\memoryUtils.js":"5","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\admin\\index.jsx":"6","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\login\\index.jsx":"7","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\api\\index.js":"8","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\api\\ajax.jsx":"9","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\line\\index.jsx":"10","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\pie\\index.jsx":"11","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\bar\\index.jsx":"12","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\index.jsx":"13","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\users\\index.jsx":"14","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\role\\index.jsx":"15","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\home\\index.jsx":"16","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\header\\index.jsx":"17","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\left-nav\\index.jsx":"18","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\index.jsx":"19","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\dataUtils.js":"20","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\config\\menuConfig.js":"21","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\link-button\\index.jsx":"22","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\addform.jsx":"23","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\updateform.jsx":"24","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\add-update.jsx":"25","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\home.jsx":"26","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\detail.jsx":"27","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\constant.js":"28","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\pictures-wall.jsx":"29","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\rich-text-editor.jsx":"30"},{"size":649,"mtime":1614608492263,"results":"31","hashOfConfig":"32"},{"size":655,"mtime":1614605278391,"results":"33","hashOfConfig":"32"},{"size":5086,"mtime":1614564066442,"results":"34","hashOfConfig":"32"},{"size":562,"mtime":1614608300848,"results":"35","hashOfConfig":"32"},{"size":115,"mtime":1614607162847,"results":"36","hashOfConfig":"32"},{"size":2169,"mtime":1615277153227,"results":"37","hashOfConfig":"32"},{"size":5012,"mtime":1615552947577,"results":"38","hashOfConfig":"32"},{"size":2659,"mtime":1615552091170,"results":"39","hashOfConfig":"32"},{"size":1180,"mtime":1615552884944,"results":"40","hashOfConfig":"32"},{"size":207,"mtime":1614671293578,"results":"41","hashOfConfig":"32"},{"size":205,"mtime":1614671297314,"results":"42","hashOfConfig":"32"},{"size":205,"mtime":1614671289723,"results":"43","hashOfConfig":"32"},{"size":643,"mtime":1615427097108,"results":"44","hashOfConfig":"32"},{"size":209,"mtime":1614671383029,"results":"45","hashOfConfig":"32"},{"size":2255,"mtime":1615557729939,"results":"46","hashOfConfig":"32"},{"size":277,"mtime":1614843716524,"results":"47","hashOfConfig":"32"},{"size":3299,"mtime":1615512516667,"results":"48","hashOfConfig":"32"},{"size":2927,"mtime":1615296770205,"results":"49","hashOfConfig":"32"},{"size":7016,"mtime":1615554177920,"results":"50","hashOfConfig":"32"},{"size":329,"mtime":1614761252505,"results":"51","hashOfConfig":"32"},{"size":1374,"mtime":1614677185091,"results":"52","hashOfConfig":"32"},{"size":244,"mtime":1614824566511,"results":"53","hashOfConfig":"32"},{"size":1235,"mtime":1615469571448,"results":"54","hashOfConfig":"32"},{"size":844,"mtime":1615469582174,"results":"55","hashOfConfig":"32"},{"size":8438,"mtime":1615558949309,"results":"56","hashOfConfig":"32"},{"size":4676,"mtime":1615554285685,"results":"57","hashOfConfig":"32"},{"size":3240,"mtime":1615558949309,"results":"58","hashOfConfig":"32"},{"size":139,"mtime":1615430570562,"results":"59","hashOfConfig":"32"},{"size":3687,"mtime":1615558949356,"results":"60","hashOfConfig":"32"},{"size":2959,"mtime":1615553052359,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"nr5489",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\index.js",[],["128","129"],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\App.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\serviceWorker.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\storageUtils.js",["130"],"/*\r\n进行local数据存储的模块\r\n*/\r\nimport store from 'store'//兼容性强,代码简洁\r\nconst USER_KEY = 'user_key'\r\nexport default{\r\n    /*\r\n    保存user\r\n    */\r\n   saveUser(user){\r\n    //    localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n    store.set(USER_KEY,user)\r\n},\r\n   /*\r\n   读取user\r\n   */\r\n    getUser(){\r\n    //   return JSON.parse(localStorage.getItem(USER_KEY)||'{}')\r\n  return store.get(USER_KEY)||{}\r\n},\r\n  /*\r\n  删除user\r\n  */\r\n deleteUser(){\r\n    //  localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n }\r\n}\r\n\r\n","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\memoryUtils.js",["131"],"/*\r\n用来在内存中保存数据\r\n*/\r\nconst user={}\r\nexport default { \r\n    user,//保存当前登录的user \r\n} ","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\admin\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\login\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\api\\index.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\api\\ajax.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\line\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\pie\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\charts\\bar\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\users\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\role\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\home\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\header\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\left-nav\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\dataUtils.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\config\\menuConfig.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\component\\link-button\\index.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\addform.jsx",["132"],"import React, { Component } from 'react'\r\nimport {Form,Select,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\nexport default class AddForm extends Component {\r\n    static propTypes = {\r\n        categorys:PropTypes.array.isRequired,\r\n        setClasses:PropTypes.func.isRequired,\r\n        setInput:PropTypes.func.isRequired\r\n    }\r\n    render() {\r\n        const {categorys}= this.props\r\n        return (\r\n            \r\n            <Form onValuesChange={this.onFinish}>\r\n                <Item name='classer'>\r\n                <Select initialValues='0' ref={input =>this.props.setClasses(input)}>\r\n                    <Option value='0'>一级分类</Option>\r\n                   {categorys.map(c=><Option value={c._id}>{c.name}</Option>)}\r\n                </Select>\r\n                </Item>\r\n                <Item name='input' name=\"username\"   rules={[{ required: true, message: \"名称必须输入!\" }]}>\r\n                <Input initialValues='请输入分类名称'  ref={input =>this.props.setInput(input)}></Input>\r\n                </Item>\r\n                {/* <Item></Item><Input></Input>\r\n                <Input></Input> */}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\category\\updateform.jsx",["133"],"import React, { Component } from 'react'\r\nimport {Form,Select,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\nexport default class UpdateForm extends Component {\r\n    static propTypes = {\r\n        category:PropTypes.string.isRequired,\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {category} = this.props\r\n        return (\r\n            <Form >\r\n                <Item   name=\"username\"   rules={[{ required: true, message: \"名称必须输入!\" }]}>\r\n                <Input     placeholder='请输入分类名称' initialValues={category}  ref={input =>this.props.setForm(input)}></Input>\r\n                </Item>\r\n                {/* <Item></Item><Input></Input>\r\n                <Input></Input> */}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\add-update.jsx",["134","135","136"],"import React, { Component } from \"react\";\r\nimport { Card, Form, Input, Cascader, Upload, Button, message } from \"antd\";\r\nimport LinkButton from \"../../component/link-button\";\r\nimport { RollbackOutlined } from \"@ant-design/icons\";\r\nimport { options } from \"less\";\r\nimport { reqCategorys,reqAddProduct } from \"../../api\";\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport PropTypes from \"prop-types\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\n\r\nconst Item = Form.Item;\r\nconst TextArea = Input.TextArea;\r\nexport default class AddUpdate extends Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array,\r\n  };\r\n  state = {\r\n    options: [],\r\n    setOptions: () => {},\r\n    cName1: \"\",\r\n    cName2: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //创造保存ref标识的标签对象的容器\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n  /* async返回值是新的promise对象,promise结果和值由async的结果 */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId);\r\n    // debugger\r\n    if (result.data.status === 0) {\r\n      const categorys = result.data.data;\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categorys);\r\n      } else {\r\n        return categorys; //返回\r\n      }\r\n      // console.log(categorys)\r\n    }\r\n  };\r\n\r\n  initOptions = async (categorys) => {\r\n    const options = categorys.map((c) => ({\r\n      //注意小括号\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false,\r\n    }));\r\n    //如果是一个二级分类列表\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      //获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      //生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        //注意小括号,生成二级列表\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      //关联到对应的一级option\r\n      //找到对应的一级对象\r\n      //   debugger\r\n      const targetOption = options.find(\r\n        (option) => option.value === pCategoryId\r\n      );\r\n      if (targetOption) {\r\n        //如果找到\r\n        targetOption.children = childOptions;\r\n      }\r\n    }\r\n    // console.log(options)\r\n    this.setState({ options });\r\n    // console.log(this.state.options)\r\n  };\r\n  //如何判断是修改还是更新\r\n  UNSAFE_componentWillMount() {\r\n    console.log(this.props.location);\r\n    const product = this.props.location.state.desc;\r\n    //保存是否更新的表示\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n  onChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n  };\r\n  /* 用来加载下面数字组 */\r\n  loadData = async (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    //显示loading\r\n    targetOption.loading = true;\r\n    //   load options lazily\r\n    //获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value);\r\n    // console.log(subCategorys)\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      const cOptions = subCategorys.map((c) => ({\r\n        //注意小括号,生成二级列表\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      targetOption.children = cOptions;\r\n    } else {\r\n      //当前分类没有二级分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n    targetOption.loading = false;\r\n    this.setState({ options: [...this.state.options] });\r\n  };\r\n  onFinish = async (values) => {//调用接口请求函数去添加/更新\r\n    //   console.log(\"Success:\", values);\r\n    const imgs = this.pw.current.getImgs();\r\n    const detail = this.editor.current.getDetail();\r\n    //   console.log('imgs',imgs)\r\n    const {name,desc,price,pCategoryId,categoryId} =values\r\n    const product = {name,desc,price,imgs,detail,pCategoryId,categoryId}\r\n    if(this.isUpdate){\r\n        product._id = this.product._id\r\n    }\r\n  console.log(product)\r\n    const result = await reqAddProduct(product)\r\n    console.log(result)\r\n    if(result.data.status===0){\r\n        message.success(`${this.isUpdate?'更新':'添加'}商品成功`)\r\n        this.props.history.goBack()\r\n    }else{\r\n      message.error(`${this.isUpdate?'更新':'添加'}商品失败`)\r\n    }\r\n\r\n  };\r\n  render() {\r\n    const { isUpdate } = this;\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <RollbackOutlined />\r\n        </LinkButton>\r\n        {isUpdate ? \"修改商品\" : \"添加商品\"}\r\n      </span>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: { span: 3 }, //左侧label宽度\r\n      wrapperCol: { span: 8 }, //右侧包裹输入框宽度\r\n    };\r\n    \r\n    const tailLayout = {\r\n      wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    // function onChange(value) {\r\n    //   console.log(value);\r\n    // }\r\n    const {\r\n      name,\r\n      desc,\r\n      price,\r\n      detail,\r\n      imgs,\r\n      pCategoryId,\r\n      categoryId,\r\n    } = this.product;\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      //   console.log(\"pCategoryId\", pCategoryId);\r\n      if (pCategoryId !== \"0\") {\r\n        categoryIds.push(pCategoryId);\r\n      }\r\n    }\r\n    categoryIds.push(categoryId);\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          {...formItemLayout}\r\n        >\r\n          <Item\r\n            name=\"name\"\r\n            label=\"商品名称\"\r\n            initialValue={name}\r\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\r\n          >\r\n            <Input placeholder=\"请输入商品名称\"></Input>\r\n          </Item>\r\n          <Item name=\"desc\" label=\"商品描述\" initialValue={desc}>\r\n            <TextArea\r\n              placeholder=\"请输入商品描述\"\r\n              autoSize={{ minRows: 2, maxRows: 6 }}\r\n            ></TextArea>\r\n          </Item>\r\n          <Item\r\n            name=\"price\"\r\n            label=\"商品价格\"\r\n            initialValue={price}\r\n            rules={[\r\n              { required: true, message: \"必须输入商品价格!\" },\r\n              {\r\n                validator: (_, value) =>\r\n                  !value || value * 1 > 0\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error(\"商品价格必须大于0\")),\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"请输入商品价格\"\r\n              addonAfter=\"元\"\r\n            ></Input>\r\n          </Item>\r\n          <Item\r\n            name=\"categoryIds\"\r\n            label=\"商品类别\"\r\n            rules={[{ required: true, message: \"必须选择商品类别!\" }]}\r\n            initialValue={categoryIds}\r\n          >\r\n            <Cascader\r\n              placeholder=\"请选择\"\r\n              options={this.state.options}\r\n              loadData={this.loadData}\r\n              onChange={this.onChange}\r\n              changeOnSelect\r\n            ></Cascader>\r\n          </Item>\r\n          <Item\r\n            name=\"imgs\"\r\n            label=\"商品图片\"\r\n            initialValue={name}\r\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\r\n          >\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          {/* 输入的是数值,指定type */}\r\n          <Item\r\n            name=\"detail\"\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 3 }}\r\n            wrapperCol= {{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.editor } detail={detail}/>\r\n          </Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n/* 子组件调用父组件的方法:将父组件的方法以函数属性的形式传递给子组件,子组件就可以调用\r\n父组件调用子组件的方法 :在父组件忠通过ref得到子组件标签对象(组件对象),调用其方法*/\r\n","D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\home.jsx",["137","138"],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\detail.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\utils\\constant.js",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\pictures-wall.jsx",[],"D:\\desk\\尚硅谷React全栈项目【谷粒后台】教程\\React-admin\\src\\pages\\product\\rich-text-editor.jsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":6,"column":1,"nodeType":"145","endLine":28,"endColumn":2},{"ruleId":"143","severity":1,"message":"144","line":5,"column":1,"nodeType":"145","endLine":7,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":24,"column":36,"nodeType":"148","endLine":24,"endColumn":51},{"ruleId":"149","severity":1,"message":"150","line":6,"column":7,"nodeType":"151","messageId":"152","endLine":6,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":2,"column":39,"nodeType":"151","messageId":"152","endLine":2,"endColumn":45},{"ruleId":"149","severity":1,"message":"154","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":17},{"ruleId":"149","severity":1,"message":"155","line":57,"column":26,"nodeType":"151","messageId":"152","endLine":57,"endColumn":36},{"ruleId":"149","severity":1,"message":"156","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"157","line":115,"column":25,"nodeType":"151","messageId":"152","endLine":115,"endColumn":35},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Option' is assigned a value but never used.","Identifier","unusedVar","'Upload' is defined but never used.","'options' is defined but never used.","'categoryId' is assigned a value but never used.","'set' is defined but never used.","'searchName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]